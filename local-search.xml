<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Apollo智能驾驶公开课系列 实践课程 第三课：Apollo软件系统部署</title>
    <link href="/2020/08/13/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E5%9B%9B%E8%AF%BE/"/>
    <url>/2020/08/13/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E5%9B%9B%E8%AF%BE/</url>
    
    <content type="html"><![CDATA[<p><em>本系列文章是百度Apollo智能驾驶系列公开课的学习记录。<a href="https://apollo.auto/" target="_blank" rel="noopener">Apollo</a>是百度发布的面向汽车行业及自动驾驶领域的软件平台。实践系列课程需要在<a href="http://www.auto-mooc.com/" target="_blank" rel="noopener">汽车学堂</a>慕课平台自行注册并搜索<strong>Apollo自动驾驶实践—从Apollo开发套件循迹开始</strong>购买。</em></p><a id="more"></a><h3 id="章节导读"><a href="#章节导读" class="headerlink" title="章节导读"></a>章节导读</h3><p>Apollo作为开源的自动驾驶平台，为帮助开发者更好的搭建Apollo系统，本节课程将为大家介绍Apollo自动驾驶系统软件的部署安装方法。</p><h1 id="Apollo自动驾驶系统组成"><a href="#Apollo自动驾驶系统组成" class="headerlink" title="Apollo自动驾驶系统组成"></a>Apollo自动驾驶系统组成</h1><p>大型的软件系统一般由操作系统、驱动、应用程序等组成。Apollo自动驾驶系统可分为三部分：<strong>系统软件</strong>、<strong>驱动软件</strong>和<strong>应用软件</strong>。如下图所示：</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%89%E8%AF%BE/Apollo%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6%E7%B3%BB%E7%BB%9F%E7%BB%84%E6%88%90.png" srcset="/img/loading.gif" alt="Apollo自动驾驶系统软件组成"></p><h1 id="Bios设置"><a href="#Bios设置" class="headerlink" title="Bios设置"></a>Bios设置</h1><ol><li><p>工控机启动时，按<code>F2</code>进入BIOS设置菜单</p></li><li><p>选择<code>Advanced</code></p></li><li><p>设置风扇的相关参数：</p><ul><li>设置温度达到50℃时风扇达到最大转速</li><li>设置温度达到20℃时风扇开始起转</li></ul></li><li><p>设置工控机一直以最佳状态运行</p></li><li><p>进入<code>Power</code>，找到<code>sku power config</code>设置为<code>max tdp</code></p></li></ol><h1 id="工控机软件安装"><a href="#工控机软件安装" class="headerlink" title="工控机软件安装"></a>工控机软件安装</h1><h2 id="计算机操作系统软件"><a href="#计算机操作系统软件" class="headerlink" title="计算机操作系统软件"></a>计算机操作系统软件</h2><h3 id="安装Ubuntu操作系统"><a href="#安装Ubuntu操作系统" class="headerlink" title="安装Ubuntu操作系统"></a>安装Ubuntu操作系统</h3><ol><li>准备一个U盘，下载镜像文件，创建一个可启动的U盘</li><li>将U盘插入工控机，按开机键启动</li><li>按<code>F12</code>进入启动菜单</li><li>选择U盘进行启动引导</li><li>安装Ubuntu系统，重新启动工控机</li></ol><h3 id="安装linux4-4内核"><a href="#安装linux4-4内核" class="headerlink" title="安装linux4.4内核"></a>安装linux4.4内核</h3><ol><li><p>在安装Ubuntu系统且联网的情况下在终端输入</p><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~</code></pre><p>进入<code>home</code>路径</p></li><li><p>在<code>home</code>路径下输入命令</p><pre><code class="hljs bash">sudo apt-get update</code></pre><p>进行软件包的升级</p></li><li><p>输入命令</p><pre><code class="hljs bash">sudo apt-get install linux-generic-lts-xenial</code></pre><p>安装linux4.4内核</p></li><li><p>重启工控机</p></li></ol><h3 id="apollo内核安装"><a href="#apollo内核安装" class="headerlink" title="apollo内核安装"></a>apollo内核安装</h3><ol><li><p>下载apollo内核，下载<a href="https://github.com/ApolloAuto/apollo-kernel/releases" target="_blank" rel="noopener">网站</a></p></li><li><p>终端中输入命令</p><pre><code class="hljs bash">tar zxvf linux-4.4.32-apollo-1.5.5.tar.gz</code></pre><p>进行解压</p></li><li><p><code>cd</code>跳转到<code>install</code>目录</p></li><li><p>终端中输入命令</p><pre><code class="hljs bash">sudo bash install_kernel.sh</code></pre><p>启动安装</p></li><li><p>重启工控机</p></li></ol><h2 id="驱动软件"><a href="#驱动软件" class="headerlink" title="驱动软件"></a>驱动软件</h2><ol><li>GPU驱动安装<br>(1)通过wget <a href="http://us.download.nvidia.com/XFree86/Linux-x86_64/375.39/NVIDIA-Linux-x86_64-375.39.run下载驱动" target="_blank" rel="noopener">http://us.download.nvidia.com/XFree86/Linux-x86_64/375.39/NVIDIA-Linux-x86_64-375.39.run下载驱动</a><br>(2)终端输入sudo bash ./NVIDIA-Linux-x86_64-375.39.run –no-x-check -a -s –no-kernel-module安装<br>(3)重启工控机</li><li>ESD-CAN卡驱动：<br>(1)从CAN卡供应商拿到CAN卡驱动安装包，一般命名为esdcan-pcie4 开头的文件<br>(2)拷贝到工控机，并解压<br>(3)通过cd esdcan-pcie402-linux-2.6.x-x86_64-3.10.3使用cd命令跳转到解压好的文件夹中<br>(4)通过cd crc/跳转到stc目录<br>(5)通过make -C /lib/modules/<code>uname -r</code>/build M=<code>pwd</code>对程序进行编译<br>(6)通过sudo make -C /lib/modules/<code>uname -r</code>/build M=<code>pwd</code> module_install安装ESD-CAN卡驱动<br>(7)如果目录中存在驱动文件则成功</li><li>socket CAN卡驱动安装<br>(1)Socket CAN 卡安装到工控机 mini PCI-E 接口上<br>(2)通过cd /etc/ydev/rules.d/跳转到指定 rules.d 目录：<br>(3)新建rules文件，sudo touch 99-kernel-rename-emuc.rules<br>(4)打开rules文件sudo vim 99-kernel-rename-emuc.rules<br>(5)添加rules文件内容<br><img src="https://img-blog.csdnimg.cn/2020081316564384.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(6)重启，进入dev目录<br>(7)检查rules是否配置成功，II ttyACM*<br>(8)emuc-B202驱动安装包下载<br><img src="https://img-blog.csdnimg.cn/20200813165648876.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(9)将emuc-B202下的Socket CAN驱动安装包解压出来放到home下， 注意有 Windows 的和 Linux 的，应选择 Linux 的。重命名为SocketCan<br>(10)跳转到 SocketCan 目录后执行编译：<br><img src="https://img-blog.csdnimg.cn/20200813165654141.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(11)修改 start.sh：<br><img src="https://img-blog.csdnimg.cn/20200813165659926.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(12)使用 bash ./start.sh 打开 CAN 卡驱动<br><img src="https://img-blog.csdnimg.cn/2020081316570571.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(13)测试： 将 CAN 卡的 CAN0 和 CAN1 连接起来<br>(14)下载测试代码<br><img src="https://img-blog.csdnimg.cn/2020081316571262.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(15)跳转到 can-utils 目录后执行编译：<br><img src="https://img-blog.csdnimg.cn/20200813165716775.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(16)执行测试命令发送数据：<br><img src="https://img-blog.csdnimg.cn/20200813165721708.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(17)另一个终端接收数据：<br>①先跳转到 can-utils-master<br>②./candump can0 命令接收 can0 的数据<br>③对比发送的和接收的数据是否一致<br>④若一致则说明 CAN 卡驱动安装成功<br>(18)目前 Apollo 没有将 Socket CAN 的启动脚本加入系统中，启动Socket CAN 的流程如下：<br>①外部启动，设置到 start 脚本<br>②目录启动脚本<br>③启动 Apollo Canbus 模块</li></ol><h2 id="应用软件"><a href="#应用软件" class="headerlink" title="应用软件"></a>应用软件</h2><ol><li>Docker 软件安装：Docker 是一种类似于虚拟机的软件，它是一种对操作系统的虚拟，将 Apollo 所依赖的环境做成 image 镜像放在 Docker 容器中，可以简化 Apollo 系统的部署<br>(1)在 docker 的官网上下载 deb 安装包<br><img src="https://img-blog.csdnimg.cn/20200813165740344.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(2)双击 deb 安装包，在 software center 进行安装，重启工控机</li><li>Git 安装：<br>(1)输入如下命令安装 git：<br><img src="https://img-blog.csdnimg.cn/20200813165745234.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"></li><li>拉取 Apollo 源代码<br>(1)通过cd ~进入 home 目录：<br>(2)通过git init初始化git仓库<br>(3)下载源代码<br><img src="https://img-blog.csdnimg.cn/20200813165752664.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(4)通过cd ~/apollo跳转到 Apollo 目录：<br>(5)将代码切换到工作分支 r3.0.0：<br><img src="https://img-blog.csdnimg.cn/20200813165757875.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(6)设置 Apollo 环境变量：<br><img src="https://img-blog.csdnimg.cn/20200813165803639.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(7)将当前用户加入 docker 用户组：<br><img src="https://img-blog.csdnimg.cn/20200813165807905.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(8)重启</li><li>启动并加入docker容器<br>(1)通过cd ~/apollo跳转到apollo目录<br>(2)执行脚本<br><img src="https://img-blog.csdnimg.cn/20200813165813127.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>第一次进入 Docker 或者当 image 镜像有更新时，docker 启动脚本会自动下载所需的镜像文件，下载镜像文件所需时间较长。执行完后会返回一个结果<br><img src="https://img-blog.csdnimg.cn/20200813165817590.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(3)通过bash docker/scripts/dev_into.sh启动 dev_into.sh 脚本进入 docker 环境进入后命令提示符变成了 in_dev_docker</li><li>编译apollo<br>(1)通过bash apollo.sh build编译，安装开始时会有黄色的警告，找不到 ESD-CAN 相关库文件，如果本次使用的是 Socket CAN 则忽略，若使用的是 ESD-CAN 则按照黄色告警的要求去读 README 文件，按照 README 文件说明完成 ESD－CAN 库文件的安装设置过程<br>(2)拷贝文件夹。打开ESD-CAN驱动安装包，找到底下的esdcan-pcie402-linux2.6.x-x86_64文件夹，将文件夹下对应的include 和 lib64 文件拷贝到 Apollo 的指定目录下。esdcan 目录在 apollo/third_party/can_card_library/esd_can<br>(3)重命名文件夹，将lib64重命名为lib<br>(4)lib下有一个.so文件和另外一个文件，保留.so文件，删除另外一个<br>(5)创立符号链接，进入刚刚拷贝的 lib 目录输入以下命令：<br><img src="https://img-blog.csdnimg.cn/20200813165824218.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(6)再次编译 Apollo，查看黄色告警是否消失</li><li>apollo控制界面以及操作界面<br>(1)通过bash scripts/bootstrap.sh启动图形化界面，根据提示用浏览器打开网址<br>(2)下载回放数据报demo<br><img src="https://img-blog.csdnimg.cn/20200813165829219.png#pic_center" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>(3)回放数据包 demo</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Apollo</tag>
      
      <tag>自动驾驶</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Apollo智能驾驶公开课系列 实践课程 第二课：Apollo硬件连接集成--集成实操</title>
    <link href="/2020/08/12/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%89%E8%AF%BE/"/>
    <url>/2020/08/12/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%89%E8%AF%BE/</url>
    
    <content type="html"><![CDATA[<p><em>本系列文章是百度Apollo智能驾驶系列公开课的学习记录。<a href="https://apollo.auto/" target="_blank" rel="noopener">Apollo</a>是百度发布的面向汽车行业及自动驾驶领域的软件平台。实践系列课程需要在<a href="http://www.auto-mooc.com/" target="_blank" rel="noopener">汽车学堂</a>慕课平台自行注册并搜索<strong>Apollo自动驾驶实践—从Apollo开发套件循迹开始</strong>购买。</em></p><a id="more"></a><h3 id="章节导读"><a href="#章节导读" class="headerlink" title="章节导读"></a>章节导读</h3><p>本节课学习者将对Apollo开发套件的硬件安装方法以及车辆集成实际操作进行深入学习，为实现自动驾驶循迹做好准备。</p><h1 id="CAN卡的安装要求"><a href="#CAN卡的安装要求" class="headerlink" title="CAN卡的安装要求"></a>CAN卡的安装要求</h1><h2 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h2><ol><li><p>将黑色跳帽安装在CAN卡内，确保两路CAN通讯同时工作</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%89%E8%AF%BE/%E8%B7%B3%E5%B8%BD.png" srcset="/img/loading.gif" alt="安装跳帽"></p></li><li><p>将PCB板上做好标记，注意PCB板上标注的<code>CN1</code>和<code>CN2</code>分别对应软件中的<code>CAN0</code>和<code>CAN1</code>，因此需要在PCB板上做好标记以免之后接错</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%89%E8%AF%BE/%E6%A0%87%E8%AE%B0.png" srcset="/img/loading.gif" alt="做好标记"></p></li></ol><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><ol><li>拆解工控机外壳，将CNA卡使用M2.5的螺栓固定在工控机内部相应位置</li><li>将CAN卡接线，CN1接CAN0，CN2接CAN1</li><li>使用螺栓固定CAN卡接口</li><li>将工控机外壳装回工控机上</li></ol><h1 id="工控机的安装要求"><a href="#工控机的安装要求" class="headerlink" title="工控机的安装要求"></a>工控机的安装要求</h1><h2 id="安装前准备-1"><a href="#安装前准备-1" class="headerlink" title="安装前准备"></a>安装前准备</h2><p>将工控机自带支架使用随配附件安装在工控机底部</p><h2 id="安装过程-1"><a href="#安装过程-1" class="headerlink" title="安装过程"></a>安装过程</h2><ol><li><p>将工控机固定在Apollo开发套件预留的工控机安装孔上，如下图所示</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%89%E8%AF%BE/%E5%AE%89%E8%A3%85%E5%AD%94.png" srcset="/img/loading.gif" alt="安装孔位置"></p><p>注意在安装时，工控机带接口的一面须面向车辆后方</p></li><li><p>为工控机安装电源🔌。将电源线绿色的接插件(24V)使用螺丝固定安装在工控机的电源输入端，注意正负极不要接反</p></li></ol><h1 id="导航设备的安装要求"><a href="#导航设备的安装要求" class="headerlink" title="导航设备的安装要求"></a>导航设备的安装要求</h1><h2 id="安装GPS天线"><a href="#安装GPS天线" class="headerlink" title="安装GPS天线"></a>安装GPS天线</h2><ol><li>连接GPS天线和底座。将GPS天线通过底座上的螺纹与底座连接，尽量拧紧一些，以免天线在车辆运行时松掉影响定位精度</li><li>固定GPS天线。GPS天线底座有磁铁🧲，可以直接连接在Apollo开发套件车架上。但是为保证连接稳定可靠，可以先<strong>在GPS底座粘贴工业用双面胶</strong>，再固定在车架上</li><li>连接GPS天线线束。</li></ol><div class="note note-primary">            <p>Apollo开发套件的车架上已经预留好GPS天线的安装位置，安装时尽量将天线安装在<strong>车辆纵向的中心处</strong>，两个天线的连线与车身线平行。</p>          </div><h2 id="安装GPS接收机和IMU"><a href="#安装GPS接收机和IMU" class="headerlink" title="安装GPS接收机和IMU"></a>安装GPS接收机和IMU</h2><p>由于星网宇达M2接收机在内部集成了IMU，因此只需安装这一个硬件即可。</p><div class="note note-primary">            <p>IMU惯性测量单元一般安装在车辆后轴中心附近，可以减少测量误差，有效表征车辆运动姿态。</p>          </div><ol start="4"><li><p>连接GPS天线与GPS接收机。GPS接收机有两个接口，分别为<code>Primary</code>接口和<code>Secondary</code>接口。定义车辆<strong>后部天线</strong>为<code>Primary</code>天线，<strong>前部天线</strong>为<code>Secondary</code>天线，将天线与对应接口相连</p></li><li><p>连接GPS接收机电源。将星网宇达M2集成线束连接在GPS接收机上，并将M2供电线通过保险盒接入主电源。由于星网宇达M2的正常工作电流为1A，故其电源线应从保险盒5A输出端接入。由于M2自带电源线束长度较短，因此需要连接保险盒提供的电源延长线进行延长。</p><div class="note note-info">            <p>   星网宇达M2集成线束包括以下线缆：</p><ol><li>GPS接收线：用于数据传输</li><li>GPS授时线：用于提供GPS授时<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="GPS授时：GPS授时产品从GPS卫星上获取标准的时间信号，将这些信息传输给自动化系统中需要时间信息的设备。">[1]</span></a></sup>功能</li><li>网线接口：用于提供联网功能</li><li>供电线：用于供电</li><li>升级口：用于配置M2</li></ol>          </div><div class="note note-primary">            <p>保险盒连接规则：</p><p>底盘电源连接到保险盒干路上，根据用电器的电流大小，接到相应的输出端口。根据输出电流的大小，保险盒的输出分为5A、10A和15A。</p><p>连接时，电源线正极按照用电器的正常工作电流大小连接到相应的输出端，负极都接至保险盒的汇流排上。</p>          </div></li></ol><h1 id="路由器与显示器的安装要求"><a href="#路由器与显示器的安装要求" class="headerlink" title="路由器与显示器的安装要求"></a>路由器与显示器的安装要求</h1><h2 id="安装4G路由器"><a href="#安装4G路由器" class="headerlink" title="安装4G路由器"></a>安装4G路由器</h2><ol><li><p>固定4G路由器。将4G路由器使用双面胶固定在Apollo开发套件车辆上</p><div class="note note-primary">            <p>4G路由器给工控机和M2设备提供网络连接，为方便接线，建议把4G路由器放在工控机和M2附近。</p>          </div><div class="note note-warning">            <p>4G路由器提供的电源线束一端连接的是电源适配器，另一端连接路由器，因此需要将线束连接电源适配器的一端剪断后再与底盘电源保险盒进行连接。</p>          </div></li><li><p>连接4G路由器电源。由于4G路由器正常工作电流不超过1A，因此将电源线束连接至保险盒<strong>5A输出</strong>上。</p></li><li><p>整理线束。</p></li></ol><h2 id="安装显示器"><a href="#安装显示器" class="headerlink" title="安装显示器"></a>安装显示器</h2><p>连接显示器电源。由于显示器正常工作时电流在7～8A左右，故将显示器电源连接在保险盒<strong>15A输出</strong>端。</p><h2 id="连接通信接口"><a href="#连接通信接口" class="headerlink" title="连接通信接口"></a>连接通信接口</h2><ol><li>连接4G路由器网线。4G路由器为<strong>工控机</strong>和<strong>GPS接收机</strong>提供网络连接</li><li>连接GPS接收机与工控机。将星网宇达M2的接收线通过<strong>USB接口</strong>连接至工控机上。</li><li>连接显示器与工控机。将显示器与工控机通过工控机上的<strong>HDMI接口</strong>相连。</li><li>连接工控机和车辆底盘。将工控机与底盘通过<strong>CAN口</strong>相连，实现工控机与车辆底盘之间的CAN通讯。</li></ol><h4 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h4><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>GPS授时：GPS授时产品从GPS卫星上获取标准的时间信号，将这些信息传输给自动化系统中需要时间信息的设备。<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>Apollo</tag>
      
      <tag>自动驾驶</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Apollo智能驾驶公开课系列 实践课程 第一课：Apollo硬件连接集成--硬件介绍</title>
    <link href="/2020/08/12/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%BA%8C%E8%AF%BE/"/>
    <url>/2020/08/12/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%BA%8C%E8%AF%BE/</url>
    
    <content type="html"><![CDATA[<p><em>本系列文章是百度Apollo智能驾驶系列公开课的学习记录。<a href="https://apollo.auto/" target="_blank" rel="noopener">Apollo</a>是百度发布的面向汽车行业及自动驾驶领域的软件平台。实践系列课程需要在<a href="http://www.auto-mooc.com/" target="_blank" rel="noopener">汽车学堂</a>慕课平台自行注册并搜索<strong>Apollo自动驾驶实践—从Apollo开发套件循迹开始</strong>购买。</em></p><a id="more"></a><h3 id="章节导读"><a href="#章节导读" class="headerlink" title="章节导读"></a>章节导读</h3><p>本节课学习者将深入了解Apollo在循迹时的车辆准备，必要的硬件准备以及硬件的集成原理，为实现自动驾驶循迹能力做好硬件准备。</p><h1 id="Apollo推荐硬件平台及车辆认证平台"><a href="#Apollo推荐硬件平台及车辆认证平台" class="headerlink" title="Apollo推荐硬件平台及车辆认证平台"></a>Apollo推荐硬件平台及车辆认证平台</h1><p>Apollo不仅为开发者提供了开源的软件平台，也为开发者提供了推荐的<a href="https://apollo.auto/platform/hardware_cn.html" target="_blank" rel="noopener">硬件💾</a>以及<a href="https://apollo.auto/vehicle/certificate_cn.html" target="_blank" rel="noopener">车辆🚗</a>选型。开发者可点击链接查看。</p><h1 id="Apollo开发套件硬件组成及原理"><a href="#Apollo开发套件硬件组成及原理" class="headerlink" title="Apollo开发套件硬件组成及原理"></a>Apollo开发套件硬件组成及原理</h1><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%BA%8C%E8%AF%BE/Apollo%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6.png" srcset="/img/loading.gif" alt="Apollo开发套件"></p><p>Apollo开发套件包括以下部分：</p><ol><li><strong>车辆底盘</strong></li><li><strong>计算单元</strong>：推荐使用工控机</li><li><strong>感知系统</strong>：前置摄像头、前置毫米波雷达、激光雷达</li><li><strong>定位系统</strong>：前后GPS天线、GPS接收机、惯性测量单元IMU</li><li><strong>其他配件</strong>：CAN卡、4G路由器、显示器、键盘鼠标</li></ol><div class="note note-primary">            <p>由于车辆在循迹自动驾驶过程中不涉及避障操作，因此搭建硬件平台时不需要摄像头、毫米波雷达、激光雷达等感知硬件</p>          </div><h2 id="计算单元"><a href="#计算单元" class="headerlink" title="计算单元"></a>计算单元</h2><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li>实时传感器数据采集</li><li>计算处理</li><li>感知规划</li><li>决策控制</li></ul><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>算力强大</li><li>全天候稳定运行</li></ul><div class="note note-info">            <p><strong>工控机</strong>是工业控制计算器的简称，是一种采用总线结构，对生产过程、机电设备及工艺装置进行检测与控制的工具。工控机的主要类别有：</p><ul><li><strong>IPC(Industrial PC, PC总线工业电脑)</strong></li><li>PLC(Programmable Logic Controller, 可编程控制系统)</li><li>DCS(Discrete Control System, 分散型控制系统)</li><li>FCS(Fieldbus Control System, 现场总线系统)</li><li>CNC(Computer Numerical Control, 数控系统)</li></ul>          </div><p>Apollo开发套件选用<strong>晨曜6108系列</strong>工控机，其工作温度为：</p><ul><li><strong>-40℃～+80℃</strong>稳定存储数据</li><li><strong>-20℃～+60℃</strong>满载稳定工作</li></ul><p>具有抗振动、抗冲击、抗电磁干扰的特点，确保工控机在车辆环境下稳定可靠地运行。</p><p>工控机同时配套GTX1080系列显卡，多路USB接口（支持多个摄像头📹接入），多路PCI-E接口（支持PCI-E接口的CAN卡，实现与车辆底层的CAN通讯）。</p><h2 id="定位系统"><a href="#定位系统" class="headerlink" title="定位系统"></a>定位系统</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%BA%8C%E8%AF%BE/%E5%8D%AB%E6%98%9F%E5%AF%BC%E8%88%AA.png" srcset="/img/loading.gif" alt="Satellite Localization"></p><p>无人驾驶车辆主要通过卫星定位来确定车辆位置，其中，IMU的工作过程如下图所示。</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%BA%8C%E8%AF%BE/IMU.png" srcset="/img/loading.gif" alt="IMU Workflow"></p><p>Apollo的定位系统由一对GPS天线和一个GPS接收机<strong>星网宇达M2</strong>组成，该接收机集成了IMU，能够提供惯性测量的输出。</p><h2 id="CAN卡"><a href="#CAN卡" class="headerlink" title="CAN卡"></a>CAN卡</h2><p>开发套件选用<strong>EMUC-CAN卡</strong>，通过工控机的miniPCIe的接口与工控机相联，实现工控机与车辆底层的通讯。</p><p>在软件方面，该CAN卡通过Linux内核自带的socket套接字通讯方式实现内核的驱动，从而实现车辆与Apollo软件的双向通信，如下图所示。</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%BA%8C%E8%AF%BE/CAN%E5%8D%A1.png" srcset="/img/loading.gif" alt="CAN卡"></p><h1 id="Apollo开发套件硬件连接"><a href="#Apollo开发套件硬件连接" class="headerlink" title="Apollo开发套件硬件连接"></a>Apollo开发套件硬件连接</h1><p>硬件连接需要注意两点：<strong>电源连接</strong>和<strong>各硬件之间的数据通讯方式</strong>。</p><h2 id="电源连接"><a href="#电源连接" class="headerlink" title="电源连接"></a>电源连接</h2><p> Apollo开发套件循迹硬件电源接线图如下图所示。</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%BA%8C%E8%AF%BE/%E7%94%B5%E6%BA%90%E8%BF%9E%E7%BA%BF.png" srcset="/img/loading.gif" alt="电源连线"> </p><p>注意硬件中除<strong>工控机需要提供24V直流电源</strong>外，其他需要直接通过车辆供电的硬件所需电压均为<strong>12V</strong>。</p><h2 id="数据接口"><a href="#数据接口" class="headerlink" title="数据接口"></a>数据接口</h2><p>Apollo开发套件循迹硬件之间的数据接口连线如下图所示。</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%BA%8C%E8%AF%BE/%E6%95%B0%E6%8D%AE%E8%BF%9E%E7%BA%BF.png" srcset="/img/loading.gif" alt="数据接口连线"></p> <div class="note note-primary">            <p>良好的接线习惯：</p><ol><li>接线前要确定额定电压</li><li>接线时要确保正负极接对</li><li>连接完毕后请仔细检查</li><li>检查无误后再上电测试</li></ol>          </div>]]></content>
    
    
    
    <tags>
      
      <tag>Apollo</tag>
      
      <tag>自动驾驶</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Apollo智能驾驶公开课系列 实践课程 第零课：导论</title>
    <link href="/2020/08/12/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE/"/>
    <url>/2020/08/12/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE/</url>
    
    <content type="html"><![CDATA[<p><em>本系列文章是百度Apollo智能驾驶系列公开课的学习记录。<a href="https://apollo.auto/" target="_blank" rel="noopener">Apollo</a>是百度发布的面向汽车行业及自动驾驶领域的软件平台。实践系列课程需要在<a href="http://www.auto-mooc.com/" target="_blank" rel="noopener">汽车学堂</a>慕课平台自行注册并搜索<strong>Apollo自动驾驶实践—从Apollo开发套件循迹开始</strong>购买。</em></p><a id="more"></a><h3 id="章节导读"><a href="#章节导读" class="headerlink" title="章节导读"></a>章节导读</h3><p>自动驾驶系统集车辆学、人工智能、计算机科学、自动控制等多学科应用于一体，是一个非常复杂的系统。搭建一个闭环的自动驾驶系统涉及技术门槛高，还面临着资金成本高、政策约束等多方面的挑战。因而在以往的自动驾驶学习课程中，以理论概念为主，缺乏闭环的上车实践。 Apollo开源平台的出现，极大的降低学习自动驾驶的技术门槛； 而Apollo开发套件的出现，又再一次降低了搭建闭环自动驾驶系统的所涉及到的车辆硬件成本高、采购周期长、测试场地限制等各种问题。 Apollo实践课程旨在通过理论加实操的方式手把手教“你”学习Apollo。</p><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><p>使用Apollo开发套件实现循迹自动驾驶。</p><h2 id="什么是循迹自动驾驶？"><a href="#什么是循迹自动驾驶？" class="headerlink" title="什么是循迹自动驾驶？"></a>什么是循迹自动驾驶？</h2><p>循迹自动驾驶是指让车辆按照事先录制好的轨迹线进行自动驾驶，涉及到自动驾驶中最基本的<strong>底盘线控能力</strong>、<strong>定位能力</strong>和<strong>控制能力</strong>，是自动驾驶系统的一个最小子集。</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E5%AE%9E%E8%B7%B5%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE/minimum_set.png" srcset="/img/loading.gif" alt="Minimum Set"></p><h2 id="为什么是循迹自动驾驶？"><a href="#为什么是循迹自动驾驶？" class="headerlink" title="为什么是循迹自动驾驶？"></a>为什么是循迹自动驾驶？</h2><p>循迹自动驾驶是车辆自动驾驶的一个最基本的能力，学习并掌握循迹自动驾驶是掌握Apollo自动驾驶系统的基础。</p><h2 id="学习目录"><a href="#学习目录" class="headerlink" title="学习目录"></a>学习目录</h2><ol><li>Apollo硬件连接集成</li><li>Apollo软件系统部署</li><li>定位模块配置</li><li>车辆动力学标定</li><li>启动车辆循迹</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Apollo</tag>
      
      <tag>自动驾驶</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Apollo智能驾驶公开课系列 进阶课程 第一课：自动驾驶行业概述（二）</title>
    <link href="/2020/07/20/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-2/"/>
    <url>/2020/07/20/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-2/</url>
    
    <content type="html"><![CDATA[<p><em>本系列文章是百度Apollo智能驾驶系列公开课的学习记录。<a href="https://apollo.auto/" target="_blank" rel="noopener">Apollo</a>是百度发布的面向汽车行业及自动驾驶领域的软件平台。公开课的地址请点击<a href="https://apollo.auto/devcenter/coursetable_cn.html?target=2">这里</a></em>。</p><p>本次课程讲述自动驾驶行业及Apollo平台的核心技术模块，帮助学习者熟悉自动驾驶行业，进一步了解相关技术模块，快速上手Apollo及自动驾驶技术。</p><a id="more"></a><h1 id="Apollo开源模块讲解-2-amp-3"><a href="#Apollo开源模块讲解-2-amp-3" class="headerlink" title="Apollo开源模块讲解-2 &amp; 3"></a>Apollo开源模块讲解-2 &amp; 3</h1><h2 id="Function-Safety-amp-Cyber-Security"><a href="#Function-Safety-amp-Cyber-Security" class="headerlink" title="Function Safety &amp; Cyber Security"></a>Function Safety &amp; Cyber Security</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-2/function_safety_and_cyber_security.png" srcset="/img/loading.gif" alt="Function Safety &amp; Cyber Security"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Apollo</tag>
      
      <tag>自动驾驶</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Apollo智能驾驶公开课系列 进阶课程 第一课：自动驾驶行业概述（一）</title>
    <link href="/2020/07/19/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/"/>
    <url>/2020/07/19/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><em>本系列文章是百度Apollo智能驾驶系列公开课的学习记录。<a href="https://apollo.auto/" target="_blank" rel="noopener">Apollo</a>是百度发布的面向汽车行业及自动驾驶领域的软件平台。公开课的地址请点击<a href="https://apollo.auto/devcenter/coursetable_cn.html?target=2">这里</a></em>。</p><p>本次课程讲述自动驾驶行业及Apollo平台的核心技术模块，帮助学习者熟悉自动驾驶行业，进一步了解相关技术模块，快速上手Apollo及自动驾驶技术。</p><a id="more"></a><h1 id="自动驾驶行业概述"><a href="#自动驾驶行业概述" class="headerlink" title="自动驾驶行业概述"></a>自动驾驶行业概述</h1><h2 id="出行领域的趋势"><a href="#出行领域的趋势" class="headerlink" title="出行领域的趋势"></a>出行领域的趋势</h2><h3 id="共享出行-Car-Sharing"><a href="#共享出行-Car-Sharing" class="headerlink" title="共享出行(Car Sharing)"></a>共享出行(Car Sharing)</h3><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/%E5%85%B1%E4%BA%AB%E5%87%BA%E8%A1%8C.png" srcset="/img/loading.gif" alt="共享出行数据"></p><ul><li>大部分时间汽车利用率很低(只有1人或无人使用)</li><li>停车空间占用了较大的城市空间(24%)</li></ul><h3 id="新能源汽车-Clean-Energy-Vehicles"><a href="#新能源汽车-Clean-Energy-Vehicles" class="headerlink" title="新能源汽车(Clean Energy Vehicles)"></a>新能源汽车(Clean Energy Vehicles)</h3><ul><li>政府制订相关政策促进行业蓬勃发展</li><li>我国期望凭借新能源汽车实现在汽车行业上的弯道超车</li><li>新能源汽车普遍被投资者看好</li></ul><table><thead><tr><th align="center">品牌</th><th align="center">Tesla</th><th align="center">General Motor</th></tr></thead><tbody><tr><td align="center"><strong>💵市值</strong></td><td align="center">53,000,000,000💲</td><td align="center">55,000,000,000💲</td></tr><tr><td align="center"><strong>🚗汽车销量</strong></td><td align="center">100,000+</td><td align="center">~10,000,000</td></tr></tbody></table><h3 id="自动驾驶-Autonomous-Driving"><a href="#自动驾驶-Autonomous-Driving" class="headerlink" title="自动驾驶(Autonomous Driving)"></a>自动驾驶(Autonomous Driving)</h3><p><strong>为什么需要自动驾驶？</strong></p><h4 id="93"><a href="#93" class="headerlink" title="93%"></a>93%</h4><p>是人为原因所造成的交通事故比例。相较于人类，自动驾驶具有以下优势：</p><ul><li>处理信息速度快。人类在驾驶车辆时处理信息的速度为30–100条/min，而自动驾驶车辆可以达到3,000条/min</li><li>感知环境角度广。自动驾驶车辆车身遍布传感器，可以同时“看到”前后左右的环境</li></ul><p>因此，自动驾驶在发展成熟的时候，一定比人类驾驶更加安全。</p><h4 id="道路更加顺畅"><a href="#道路更加顺畅" class="headerlink" title="道路更加顺畅"></a>道路更加顺畅</h4><p>自动驾驶可以使道路更加通畅。具体体现在：</p><ul><li><p>自动驾驶可以减少道路上的交通事故，从而减少道路拥堵</p></li><li><p>自动驾驶的反应时间远小于人类驾驶员。</p><div class="note note-info">            <p>例如，当人类驾驶员驾驶机动车通过十字路口时，可能需要减速观察路口情况，确认安全后再恢复原速通过；而自动驾驶车辆在经过计算得知<em>（这个过程十分短暂）</em>路口在通过时不可能会变成红灯，也不会有车辆通过时，就会<strong>全速通过路口</strong>。</p>          </div></li></ul><h2 id="自动驾驶分级"><a href="#自动驾驶分级" class="headerlink" title="自动驾驶分级"></a>自动驾驶分级</h2><h3 id="Level-1-Adaptive-Cruise-Control"><a href="#Level-1-Adaptive-Cruise-Control" class="headerlink" title="Level 1: Adaptive Cruise Control"></a>Level 1: Adaptive Cruise Control</h3><p>自动驾驶系统可以<strong>纵向</strong>控制车辆，根据周围情况作出加速、减速等行为</p><h3 id="Level-2-Lane-Keeping"><a href="#Level-2-Lane-Keeping" class="headerlink" title="Level 2: Lane Keeping"></a>Level 2: Lane Keeping</h3><p>自动驾驶系统还可以<strong>横向</strong>操控车辆，控制车辆沿车道线（可能是弯曲的车道线）行驶。此时，<strong>人类</strong>还是驾驶行为的主体</p><p>e.g. Autopilot from Tesla</p><h3 id="Level-3-Lane-Change"><a href="#Level-3-Lane-Change" class="headerlink" title="Level 3: Lane Change"></a>Level 3: Lane Change</h3><p><strong>自动驾驶驾驶系统</strong>在<strong>特定情况下</strong>成为驾驶行为的主体</p><p>e.g. 2018 Aodi A3</p><div class="note note-warning">            <p>Level 2 与 Level 3  之间最重要的区别在于<strong>权责</strong>的鉴定。在Level 2阶段，人类是驾驶行为的主体。例如，Tesla在其Autopilot功能的介绍页面中就如下<a href="https://www.tesla.com/autopilot" target="_blank" rel="noopener">提醒用户</a>：</p><blockquote><p>Current Autopilot features require active driver supervision and do not make the vehicle autonomous.</p><p>当前的Autopilot功能需要驾驶员时刻进行监管，请勿使车辆处于自动驾驶状态。</p></blockquote>          </div><h3 id="Level-4-amp-5-Driverless"><a href="#Level-4-amp-5-Driverless" class="headerlink" title="Level 4 &amp; 5: Driverless"></a>Level 4 &amp; 5: Driverless</h3><p><strong>自动驾驶系统</strong>在<strong>绝大多数情况下</strong>作为驾驶行为的主体。其中，在 Level 5 阶段，车辆内部将不存在方向盘、油门踏板、刹车踏板等操作装置，人类将完全不介入驾驶行为</p><h2 id="自动驾驶发展简史"><a href="#自动驾驶发展简史" class="headerlink" title="自动驾驶发展简史"></a>自动驾驶发展简史</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/%E5%8F%91%E5%B1%95%E7%AE%80%E5%8F%B2.png" srcset="/img/loading.gif" alt="自动驾驶发展简史"></p><h2 id="自动驾驶领域的几次较大投资"><a href="#自动驾驶领域的几次较大投资" class="headerlink" title="自动驾驶领域的几次较大投资"></a>自动驾驶领域的几次较大投资</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/%E5%A4%A7%E6%8A%95%E8%B5%84.png" srcset="/img/loading.gif" alt="自动驾驶领域的几次较大投资"></p><p><em>有钱途</em></p><h1 id="Apollo开源模块讲解-1"><a href="#Apollo开源模块讲解-1" class="headerlink" title="Apollo开源模块讲解-1"></a>Apollo开源模块讲解-1</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>民用技术领域技术最复杂，技术含量最高的行业之一</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/overview.png" srcset="/img/loading.gif" alt="Technical Overview"></p><ol><li>By-wire System: 自动驾驶汽车采用“线控”的方式控制车辆，车内的计算机通过电机驱动车轮。</li><li>强大的处理器：自动驾驶车辆搭载的激光雷达(LiDAR)每天产生的数据在TB级别，因此，需要性能强劲的处理器对这些数据进行处理。</li><li>Cluster: 自动驾驶车辆需要实时和云端进行沟通，报告自己的位置，云端需要实时对自动驾驶车辆的位置进行监控跟踪。</li></ol><h2 id="HD-Maps"><a href="#HD-Maps" class="headerlink" title="HD Maps"></a>HD Maps</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/HD_maps.png" srcset="/img/loading.gif" alt="HD Maps"></p><p><strong>为什么自动驾驶需要高精地图？</strong></p><ol><li>使自动驾驶车辆具有预判能力。即使自动驾驶车辆并没有“看到”路面上的减速标志，车辆仍然会提前减速；</li><li>减少自动驾驶车辆的计算量。自动驾驶车辆知道特定地标（如红绿灯）的精确坐标后，就不需要在摄像头的整个视野内检索，只需关注ROI中的内容。</li><li>Road Map 和 Intensive Map。Road Map 标注出了车道与车道之间的连接关系，Intensive Map 则主要关注道路周围的静态障碍物。当 Intensive Map 建立好后，自动驾驶车辆在路面上行驶的时候就会忽略这些障碍物。</li></ol><h2 id="Localization"><a href="#Localization" class="headerlink" title="Localization"></a>Localization</h2><p>有了高精度地图后，最重要的一步就是知道车辆在高精度地图上的什么位置，亦即<strong>定位(Localization)</strong>。</p><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/localization.png" srcset="/img/loading.gif" alt="Localization"></p><h3 id="GPS-Global-Positioning-System"><a href="#GPS-Global-Positioning-System" class="headerlink" title="GPS(Global Positioning System)"></a>GPS(Global Positioning System)</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>通过接收GPS卫星发出的电磁波信号传播的时间，计算卫星与接收者之间的距离，从而确定接收者在地球上的位置。理论上<strong>4颗</strong>GPS卫星就可以确定地球上的任一位置。</p><h4 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h4><ol><li>GPS发出的电磁信号易受到干扰。例如，当电磁信号穿过电离层时，信号会发生衰减，传播速度也会变慢。再比如，电磁信号在会玻璃幕墙上发生反射，导致信号传播时间变长。</li><li>GPS系统计算得出的位置可能产生“瞬移“现象。由于GPS系统计算的位置是时间独立的，加之每一次计算都存在误差，故而导致通过GPS系统计算出的位置信息可能会呈现出”瞬移“的现象。</li></ol><p>因此，GPS定位系统的精度只能到达<strong>m级</strong>。</p><h3 id="RTK-Real-Time-Kinematic"><a href="#RTK-Real-Time-Kinematic" class="headerlink" title="RTK(Real-Time Kinematic)"></a>RTK(Real-Time Kinematic)</h3><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><p>建立静态基站接受GPS信号，将接受到的信号与车辆接受到的GPS信号进行差分运算，一定程度上减少误差。RTK可以将定位的误差缩小到<strong>10cm级</strong>。</p><h4 id="缺陷-1"><a href="#缺陷-1" class="headerlink" title="缺陷"></a>缺陷</h4><p>RTK基站所能覆盖的有效范围有限，一般来说只能保证半径为10miles(≈16km)内有效。对于长距离道路（如国道）来说，完全采用GPS+RTK的定位方案需要建立许多基站，不具备可行性。</p><h3 id="IMU-Inertia-Measurement-Unit"><a href="#IMU-Inertia-Measurement-Unit" class="headerlink" title="IMU(Inertia Measurement Unit)"></a>IMU(Inertia Measurement Unit)</h3><h4 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h4><p>通过测量车辆的朝向、速度、加速度等运动学物理量，加上初始条件下通过某种定位系统（通常是GPS）给出的位置信息，就可以计算出车辆在给定时刻的位置。这样就解决了GPS测量车辆位置时呈现的“瞬移”问题。</p><h4 id="缺陷-2"><a href="#缺陷-2" class="headerlink" title="缺陷"></a>缺陷</h4><p>由于IMU是通过计算得知车辆的位置，故计算过程中得到的误差会产生累计。因此，经常将GPS和IMU结合作为定位方案。GPS和IMU在实际定位过程中相互校准，减少误差。</p><p>然而，当车辆行驶至城市谷地、长距离隧道时，车辆将无法接收到GPS信号。因此，GPS+IMU的方案也不能满足自动驾驶的需要。</p><h3 id="几何定位-Geometry-Localization"><a href="#几何定位-Geometry-Localization" class="headerlink" title="几何定位(Geometry Localization)"></a>几何定位(Geometry Localization)</h3><h4 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h4><p>几何定位也称作相对定位，通过测量与已知精确位置的特征的距离来计算车辆的位置。GPS也是相对定位的一种（通过测量与卫星之间的距离）。实际应用中，通常选择使用LiDAR测量距离，可以达到很高的定位精度。</p><h2 id="有关传感器"><a href="#有关传感器" class="headerlink" title="有关传感器"></a>有关传感器</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/lidar_vision.png" srcset="/img/loading.gif" alt="How does the world look like in the eyes of an autonomous vehicle"></p><table><thead><tr><th align="center">传感器</th><th align="center">距离？</th><th align="center">对环境要求？</th><th align="center">颜色？</th><th align="center">速度？</th></tr></thead><tbody><tr><td align="center"><strong>LiDAR</strong>💡</td><td align="center">✅（十分精准）</td><td align="center">❌（激光束波长极短）</td><td align="center">❌</td><td align="center">⭕️</td></tr><tr><td align="center"><strong>RADAR</strong>🧲</td><td align="center">✅</td><td align="center">✅（全天候）</td><td align="center">❌</td><td align="center">✅（十分准确）</td></tr><tr><td align="center"><strong>Camera</strong>📹</td><td align="center">❌（双目摄像头可以做到在50～60m范围内误差为1～2m）</td><td align="center">✅</td><td align="center">✅</td><td align="center">❌</td></tr></tbody></table><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/lidars.png" srcset="/img/loading.gif" alt="Different kinds of LiDAR and their prices"></p><p><em>真的很贵</em></p><h2 id="Sensing-amp-Perception"><a href="#Sensing-amp-Perception" class="headerlink" title="Sensing &amp; Perception"></a>Sensing &amp; Perception</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/sensing_and_perception.png" srcset="/img/loading.gif" alt="Sensing and Perception"></p><p>之前提到，所有的 Sensor 都有自己的局限性，因此实际应用时要将所有的 Sensor 探测到的数据结合起来，这一过程称作<strong>传感器融合(Sensor Fusion)</strong>。</p><p>例如，当自动驾驶车辆遇到行人时，车辆需要将摄像头拍摄的画面、LiDAR 探测到的点云和 RADAR 接收到的信息进行综合，推断出传感器们得到的信息其实是一个物体。做到这一点需要时间和空间上的精确同步，这也是目前的一个<u>技术难点</u>。</p><p>当进行传感器融合之后，车辆需要对探测到的物体进行识别，并且根据识别到的信息，结合过去和当前该物体的运动状态，判断并预测该物体将来的运动状态。</p><h2 id="Trajectory-Planning"><a href="#Trajectory-Planning" class="headerlink" title="Trajectory Planning"></a>Trajectory Planning</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/trajectory_planning.png" srcset="/img/loading.gif" alt="Trajectory Planning"></p><p>自动驾驶系统的最终一环是对车辆做出控制，自动驾驶系统在作出控制时，需要受到以下限制：</p><ol><li>自动驾驶系统作出的控制需要满足一定的约束条件。例如，车辆需要对行人、来车进行避让，在可行条件下超车，遵守交通规则等；</li><li>自动驾驶系统作出的控制需要做到尽可能平滑。目前，大部分车厂的标准是做到使距离对时间的五阶导数$d^5x\over dt^5$尽可能小，目的就是将乘客感受到的不平滑感降到最低。</li></ol><h2 id="to-Avoid-Obstacles"><a href="#to-Avoid-Obstacles" class="headerlink" title="to Avoid Obstacles"></a>to Avoid Obstacles</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/to_avoid_obstacles.png" srcset="/img/loading.gif" alt="to Avoid Obstacles"></p><h2 id="Simulation"><a href="#Simulation" class="headerlink" title="Simulation"></a>Simulation</h2><p><img src="/img/Apollo%E6%99%BA%E8%83%BD%E9%A9%BE%E9%A9%B6%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%AF%BE-1/simulation.png" srcset="/img/loading.gif" alt="Simulation"></p><p>百度拥有一个巨大的虚拟空间，存放了许多自动驾驶车辆在实际应用中的场景。每当一个新算法被提出，就可以在这个虚拟空间中进行测试。如果算法未通过测试，则不会被部署到实际车辆上。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Apollo</tag>
      
      <tag>自动驾驶</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
